<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student LogIn</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
        integrity="sha512-1ycn6IcaQQ40/MKBW2W4Rhis/DbILU74C1vSrLJxCq57o941Ym01SwNsOMqvEBFlcgUa6xLiPY/NS5R+E6ztJQ=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />

    <!-- Google Sign-In Client ID -->
    <meta name="google-signin-client_id"
        content="187823791109-qscec343sqpj9eguuuoom5c5eebv1sff.apps.googleusercontent.com">

    <style>
        /* General resets and base styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
        }

        .main {
            display: flex;
            justify-content: space-around;
            width: 100vw;
            height: 100vh;
            position: relative;

        }

        /* Navigation styles */
        nav {
            width: 20vw;
            background: linear-gradient(to top left, #300eac, #3498db);
            display: flex;
            flex-direction: column;
            justify-content: start;
            height: 100%;
            z-index: 1;
            padding: 20px;
            color: white;
        }

        nav h1 {
            margin-bottom: 20px;
            font-size: 24px;
        }

        nav button {
            text-decoration: none;
            height: 50px;
            color: white;
            margin: 10px 0;
            display: flex;
            justify-content: center;
            align-items: center;
            border: none;
            background: transparent;
            transition: background-color 0.3s ease;
        }

        nav button:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }

        /* Section styles */
        section {
            width: 80vw;
            height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            position: relative;
        }

        h1 {
            font-size: 36px;
            margin-bottom: 20px;
            color: #333;
        }

        .cards {
            display: flex;
            width: 100%;
            justify-content: space-around;
            margin-bottom: 20px;
        }

        .card {
            width: 18rem;
            height: 7rem;
            background-color: #fff;
            border: 1px solid #ccc;
            border-radius: 10px;
            padding: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            transition: transform 0.3s ease;
        }

        .card:hover {
            transform: translateY(-5px);
        }

        .card-title {
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .card-subtitle {
            font-size: 16px;
            color: #666;
        }

        .card-link {
            color: #007bff;
            text-decoration: none;
            font-size: 14px;
            margin-top: 10px;
        }

        .card-link:hover {
            text-decoration: underline;
        }

        /* Tasks section */
        .tasks {
            width: 100%;
            overflow-y: auto;
        }

        .taskCard {
            background-color: #fff;
            border: 1px solid #ccc;
            border-radius: 10px;
            margin-bottom: 20px;
            padding: 15px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .leftTask {
            flex: 1;
        }

        .taskTitle {
            font-size: 18px;
            font-weight: bold;
            color: #333;
        }

        .taskDueDate {
            color: #666;
            margin-top: 5px;
        }

        .rightTask {
            flex: 0 0 auto;
        }

        .taskShow {
            background-color: #007bff;
            color: #fff;
            padding: 8px 16px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .taskShow:hover {
            background-color: #0056b3;
        }


        /* Add Task form */
        #addTask,
        #updateTask {
            position: fixed;
            top: 50%;
            left: 60%;
            transform: translate(-50%, -50%);
            background-color: #fff;
            z-index: 999;
            padding: 20px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            max-width: 80vw;
            width: 40vw;
            overflow-y: auto;
            display: none;
            height: 80vh;
            /* border: 2px solid black; */
        }

        #addTask h2,
        #updateTask h2 {
            text-align: center;
            margin-bottom: 20px;
            font-size: 24px;
            color: #333;
        }

        #addTask form,
        #updateTask form {
            display: grid;
            gap: 15px;
        }

        #addTask label,
        #updateTask label {
            font-weight: bold;
            color: #555;
        }

        #addTask input[type="text"],
        #addTask input[type="date"],
        #addTask textarea,
        #addTask select,
        #updateTask input[type="text"],
        #updateTask input[type="date"],
        #updateTask textarea,
        #updateTask select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            font-size: 16px;
        }

        #addTask button[type="submit"],
        #updateTask button[type="submit"] {
            background-color: #007bff;
            color: #fff;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
            border-radius: 5px;
            font-size: 16px;
            transition: background-color 0.3s ease;
        }

        #addTask button[type="submit"]:hover,
        #updateTask button[type="submit"]:hover {
            background-color: #0056b3;
        }

        .delete,
        .update,
        #cross {
            width: 2rem;
            height: 2rem;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        #cross:hover {
            background-color: red;
            color: white;

        }

        .delete:hover {
            color: red;
        }

        .update:hover {
            color: blue;

        }

        .search-container {
            position: relative;
            width: 300px;
        }

        .search-input {
            width: 100%;
            padding: 12px 40px 12px 12px;
            /* Adjust padding to create space for the icon */
            font-size: 16px;
            border: 2px solid #ccc;
            border-radius: 25px;
            /* Rounded corners */
            outline: none;
        }

        .search-input:focus {
            border-color: #007bff;
            /* Highlight border color on focus */
        }

        .search-icon {
            position: absolute;
            top: 50%;
            right: 10px;
            transform: translateY(-50%);
            color: #666;
            cursor: pointer;
        }

        .search-icon:hover {
            color: #333;
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            .main {
                flex-direction: column;
                align-items: center;
            }

            nav {
                width: 100%;
                height: auto;
                padding: 10px;
                text-align: center;
            }

            .cards {
                flex-direction: column;
                align-items: center;
            }

            .card {
                width: 80%;
                margin-bottom: 10px;
            }

            .tasks {
                width: 100%;
            }

            .taskCard {
                width: 90%;
                margin-left: auto;
                margin-right: auto;
            }
        }
    </style>
</head>

<body>
    <div class="main">
        <nav>
            <h1 id="profileName">Profile Name</h1>
            <button id="addTaskButton">Add Task</button>
            <button>See All Tasks</button>
        </nav>
        <section>
            <h1>Dashboard</h1>
            <div class="cards">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Tasks</h5>
                        <h6 class="card-subtitle mb-2 text-body-secondary">
                            <%=response2.length%>
                           

                        </h6>
                        <a href="#" class="card-link">Show Tasks List</a>
                    </div>
                </div>
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Completed</h5>
                        <h6 class="card-subtitle mb-2 text-body-secondary">5</h6>
                        <a href="#" class="card-link">Show Tasks List</a>
                    </div>
                </div>
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Pending</h5>
                        <h6 class="card-subtitle mb-2 text-body-secondary">5</h6>
                        <a href="#" class="card-link">Show Tasks List</a>
                    </div>
                </div>
            </div>
            <div class="sort-filter"
                style="display: flex; width: 50%; justify-content: space-around;  height: 10vh; align-items: center;">
                <div class="search-container">
                    <input type="text" class="search-input" placeholder="Search Tasks">
                    <i class="fas fa-search search-icon" style="font-size: 1.5rem;"></i>
                </div>
                <div class="sort">
                    <select name="sortOption" id="sortOption" onchange="sortTasks(this.value)">
                        <option value="">Sort by...</option>
                        <option value="title">Sort by Title</option>
                        <option value="due">Sort by Due Date</option>
                        <option value="priority">Sort by Priority</option>
                    </select>
                    
                    
                </div>
                <div class="filter">FILTER</div>
            </div>
            <div class="tasks">

                <% response2.forEach(function(eachTask) { %>
                    <div class="taskCard">
                        <div class="leftTask">
                            <div class="taskTitle">
                                <input type="checkbox" name="taskCheckbox" id="checkbox_<%= eachTask.id %>"
                                       onchange="completeTask('<%= eachTask.id %>')" <% if (eachTask.completed) { %> checked <% } %>>
                                <%= eachTask.title %>
                            </div>
                            <div class="taskDueDate">
                                <%= eachTask.due_date %>
                            </div>
                        </div>
                        <div class="rightTask"
                             style="display: flex; justify-content: space-around; width: 25%; height: 100%; align-items: center;">
                            <i class="fas fa-trash-alt" style="font-size: 1.6vw;" id="delete_<%= eachTask.id %>"
                               class="delete" onclick="deleteTask('<%= eachTask.id %>')"></i>
                            <!-- Example of how to pass task IDs to a function -->
                            <i class="fas fa-edit update" style="font-size: 1.6vw;" id="update_<%= eachTask.id %>"
                               onclick="updateTask('<%= eachTask.id %>')"></i>
                
                            <div class="taskShow">Show Details</div>
                        </div>
                    </div>
                <% }); %>
                
                        <!-- Repeat taskCard structure for other tasks -->
            </div>
        </section>
    </div>

    <div id="addTask">
        <div style="display: flex; width: 100%; justify-content: space-around; align-items: center;  height: 8vh;">
            <h2 style="width: 90%; text-align: center; padding: 0; margin: 0;">Add Task Form</h2>
            <i class="fas fa-times" style="font-size: 2vw;" id="cross" onclick="closeAddTask(event)"></i>


        </div>
        <form action="/tasks" method="post">

            <input type="hidden" name="adminId" value="<%= adminID %>">


            <label for="taskName">Task Name:</label>
            <input type="text" id="taskName" name="title" required>

            <label for="description">Description:</label>
            <textarea id="description" name="description" rows="4"></textarea>

            <label for="assignedTo">Assigned To:</label>
            <select id="assignedTo" name="assignedTo">
                <% if (response.length> 0) { %>
                    <% response.forEach((eachData)=> { %>
                        <option value="<%= eachData.username %>">
                            <%= eachData.username %>
                        </option>
                        <% }) %>
                            <% } %>
            </select>

            <label for="attachment">Attachment:</label>
            <button type="button">Upload PDF</button> <!-- Change type to 'button' for demonstration -->

            <label for="dueDate">Due Date:</label>
            <input type="date" id="dueDate" name="due_date" required>

            <label for="priority">Priority:</label>
            <select id="priority" name="priority">
                <option value="high">High</option>
                <option value="medium">Medium</option>
                <option value="low">Low</option>
            </select>

            <input type="submit" value="Submit">
        </form>
    </div>
    <div id="updateTask">
        <div style="display: flex; width: 100%; justify-content: space-around; align-items: center;  height: 8vh;">
            <h2 style="width: 90%; text-align: center; padding: 0; margin: 0;">Update Task Form</h2>
            <i class="fas fa-times" style="font-size: 2vw;" id="crossUpdate" onclick="closeUpdateTask(event)"></i>
        </div>
        <form action="/utasks" method="post">
            <input type="hidden" name="adminId" value="<%= adminID %>">
            <label for="updateTaskTitle">Task Name:</label>
            <input type="text" id="updateTaskTitle" name="title" required>
            <label for="updateTaskDescription">Description:</label>
            <textarea id="updateTaskDescription" name="description" rows="4"></textarea>
            <label for="updateTaskAssignedTo">Assigned To:</label>
            <select id="updateTaskAssignedTo" name="assignedTo">
                <% if (response.length > 0) { %>
                    <% response.forEach((eachData) => { %>
                        <option value="<%= eachData.username %>">
                            <%= eachData.username %>
                        </option>
                    <% }) %>
                <% } %>
            </select>
            <label for="updateTaskDueDate">Due Date:</label>
            <input type="date" id="updateTaskDueDate" name="due_date" required>
            <label for="updateTaskPriority">Priority:</label>
            <select id="updateTaskPriority" name="priority">
                <option value="high">High</option>
                <option value="medium">Medium</option>
                <option value="low">Low</option>
            </select>
            <input type="submit" value="Update Task">
        </form>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var addTaskElement = document.getElementById("addTask");
            var mainElement = document.querySelector('section');
            const adminID = "<%= adminID %>"
            console.log(adminID)

            function addTask() {
                addTaskElement.style.display = "block";
                mainElement.style.filter = "blur(5px)";
                document.body.style.overflow = "hidden"; // Prevent scrolling when addTask is open
            }

            function closeAddTask(event) {
                if (event.target.id === 'cross') {
                    addTaskElement.style.display = "none";
                    mainElement.style.filter = "none"; // Reset the blur effect
                    document.body.style.overflow = ""; // Restore scrolling
                }
            }

            document.getElementById("addTaskButton").addEventListener("click", addTask);
            document.addEventListener("click", closeAddTask);
        });



        function updateTask(taskId,response) {
            // Find the task object in response2 based on taskId
            alert(taskId)
            alert(response)
            for(let i=0;i<response.length;i++){
                if(response[i].id===taskId){
                    console.log(i)
                }
            }

            
        }
        function deleteTask(taskid){
            alert(taskid)
            window.location.href=`/deleteTask?taskid=${encodeURIComponent(taskid)}`
        }


        function sortTasks(option) {
        if (option === 'title') {
            window.location.href = '/sort-title';
        } else if (option === 'due') {
            window.location.href = '/sort-due';
        }
        else if(option=='priority'){
            
            window.location.href = '/sort-priority';
    }
    }

    function completeTask(taskId) {
        var checkbox = document.getElementById("checkbox_" + taskId);
        var isChecked = checkbox.checked;

        // Perform actions based on whether the checkbox is checked or not
        if (isChecked) {
            window.location.href=`/update-complete?taskId=${encodeURIComponent(taskId)}`;
            complete(taskId); // Call your complete function or perform relevant actions
        } else {
            // Checkbox is unchecked, perform action (e.g., mark task as incomplete)
            // Handle as needed
        }
    }
    </script>

</body>

</html>